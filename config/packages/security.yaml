security:
    password_hashers:
        App\Entity\User:
            algorithm: auto


    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        main:
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                target: /


    access_control:
        # Accès Public
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/comments/new$, roles: PUBLIC_ACCESS }
        - { path: ^/.*/\d+$, roles: PUBLIC_ACCESS } # Pour show

        # Utilisateurs Authentifiés
        - { path: ^/(tasks|user|races|images|profile), roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/.*/new$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/.*/\d+/edit$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/.*/\d+/delete$, roles: IS_AUTHENTICATED_FULLY }

        # Administrateurs
        - { path: ^/(register|admin|role), roles: ROLE_ADMIN }





when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
